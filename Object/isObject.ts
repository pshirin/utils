/**
 * Функция `isObject` проверяет, является ли переданный ей аргумент объектом.
 *
 * @param obj - Это значение, которое нужно проверить на то, является ли оно объектом.
 * @returns Возвращает `true`, если `obj` является объектом, и `false` в противном случае.
 *
 * Функция использует оператор `typeof` для проверки, является ли `obj` объектом. Однако, поскольку в JavaScript массивы также считаются объектами, функция также проверяет, не является ли `obj` массивом с помощью метода `Array.isArray()`. Если `obj` является объектом и не является массивом, функция возвращает `true`. В противном случае она возвращает `false`.
 *
 * Пример использования:
 * ```typescript
 * console.log(isObject({})); // Выводит: true
 * console.log(isObject([])); // Выводит: false
 * console.log(isObject("I am a string")); // Выводит: false
 * ```
 *
 * Обратите внимание, что функция `isObject` не проверяет, является ли `obj` экземпляром какого-либо класса. Она только проверяет, является ли `obj` "простым" объектом (т.е. объектом, созданным с помощью `{}`) [[1]][[2]][[4]][[8]][[10]].
 */

const isObject = (obj: unknown): obj is Record<PropertyKey, unknown> =>
  typeof obj === "object" && !Array.isArray(obj) && obj !== null;

export default isObject;
